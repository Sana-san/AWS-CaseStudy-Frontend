{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\001A6W744\\\\Desktop\\\\Project\\\\Main Project\\\\code\\\\frontend\\\\ecommerce-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\001A6W744\\\\Desktop\\\\Project\\\\Main Project\\\\code\\\\frontend\\\\ecommerce-frontend\\\\src\\\\pages\\\\Products.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { Grid, Card, Segment } from \"semantic-ui-react\";\nimport Product from \"../components/Product\";\nimport Pagination from \"../components/Pagination\";\nimport AddProductForm from \"../components/AddProductForm\";\nimport Context from \"../config/context\";\nexport default function Products() {\n  const context = useContext(Context);\n  const user = context.user,\n        products = context.products,\n        getProducts = context.getProducts;\n\n  const _useState = useState(1),\n        _useState2 = _slicedToArray(_useState, 2),\n        currentPage = _useState2[0],\n        setCurrentPage = _useState2[1];\n\n  const _useState3 = useState(6),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cardsPerPage = _useState4[0],\n        setCardsPerPage = _useState4[1];\n\n  useEffect(() => {\n    getProducts();\n  }, []); // Get current products\n\n  const indexOfLastProduct = currentPage * cardsPerPage;\n  const indexOfFirstProduct = indexOfLastProduct - cardsPerPage;\n  const currentProducts = products.slice(indexOfFirstProduct, indexOfLastProduct);\n  const views = products.length > 0 ? currentProducts.map(product => React.createElement(Product, {\n    product: product,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })) : React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Nothing here!\")));\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pagination = products.length > cardsPerPage ? React.createElement(Pagination, {\n    cardsPerPage: cardsPerPage,\n    totalCards: products.length,\n    paginate: paginate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : null;\n  const add = user ? user.admin ? React.createElement(AddProductForm, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }) : null : null;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    floated: \"left\",\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Recent Products\")), React.createElement(Grid.Column, {\n    floated: \"right\",\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, add))), React.createElement(Card.Group, {\n    fluid: true,\n    itemsPerRow: \"3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, views), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"center\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, pagination));\n}","map":{"version":3,"sources":["C:/Users/001A6W744/Desktop/Project/Main Project/code/frontend/ecommerce-frontend/src/pages/Products.js"],"names":["React","useContext","useState","useEffect","Grid","Card","Segment","Product","Pagination","AddProductForm","Context","Products","context","user","products","getProducts","currentPage","setCurrentPage","cardsPerPage","setCardsPerPage","indexOfLastProduct","indexOfFirstProduct","currentProducts","slice","views","length","map","product","paginate","pageNumber","pagination","add","admin"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\n\r\nimport { Grid, Card, Segment } from \"semantic-ui-react\";\r\n\r\nimport Product from \"../components/Product\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport AddProductForm from \"../components/AddProductForm\";\r\n\r\nimport Context from \"../config/context\";\r\n\r\nexport default function Products() {\r\n  const context = useContext(Context);\r\n  const { user, products, getProducts } = context;\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [cardsPerPage, setCardsPerPage] = useState(6);\r\n\r\n  useEffect(() => {\r\n    getProducts();\r\n  }, []);\r\n\r\n  // Get current products\r\n  const indexOfLastProduct = currentPage * cardsPerPage;\r\n  const indexOfFirstProduct = indexOfLastProduct - cardsPerPage;\r\n  const currentProducts = products.slice(\r\n    indexOfFirstProduct,\r\n    indexOfLastProduct\r\n  );\r\n\r\n  const views =\r\n    products.length > 0 ? (\r\n      currentProducts.map(product => <Product product={product} />)\r\n    ) : (\r\n      <Card>\r\n        <Card.Content>\r\n          <h2>Nothing here!</h2>\r\n        </Card.Content>\r\n      </Card>\r\n    );\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  const pagination =\r\n    products.length > cardsPerPage ? (\r\n      <Pagination\r\n        cardsPerPage={cardsPerPage}\r\n        totalCards={products.length}\r\n        paginate={paginate}\r\n      />\r\n    ) : null;\r\n\r\n  const add = user ? user.admin ? <AddProductForm /> : null : null;\r\n\r\n  return (\r\n    <div>\r\n      <Segment>\r\n        <Grid>\r\n          <Grid.Column floated=\"left\" width={5}>\r\n            <h1>Recent Products</h1>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={5}>\r\n            {add}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Card.Group fluid itemsPerRow=\"3\">\r\n        {views}\r\n      </Card.Group>\r\n      <br />\r\n      <center>{pagination}</center>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}